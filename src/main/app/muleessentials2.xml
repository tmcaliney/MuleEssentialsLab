<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:context="http://www.springframework.org/schema/context" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd">
    <data-mapper:config name="json_to_pojo" transformationGraphPath="json_to_pojo.grf" doc:name="json_to_pojo"/>
    <jms:activemq-connector name="Active_MQ" specification="1.1" brokerURL="vm://localhost" validateConnections="true" doc:name="Active MQ"/>
    <spring:beans>
        <spring:bean id="DBInitBean" name="DBInitBean" class="com.mulesoft.training.DBInitialization"/>
    </spring:beans>
    <jdbc-ee:derby-data-source name="Derby_Data_Source" password="" url="jdbc:derby:memory:muleEmbeddedDB;create=true" transactionIsolation="UNSPECIFIED" doc:name="Derby Data Source"/>
    <jdbc-ee:connector name="SouthwestPriceDB" dataSource-ref="Derby_Data_Source" validateConnections="true" queryTimeout="-1" pollingFrequency="0" doc:name="Database">
        <jdbc-ee:query key="GET_PRICE_FOR_DEST_ORIGIN" value="SELECT PRICE FROM Ticket_Price WHERE DESTINATION=#[message.payload.destination] AND ORIGIN = #[message.payload.origin]"/>
        <jdbc-ee:query key="UPDATE_PRICE" value="UPDATE Ticket_Price SET PRICE = #[message.payload['TotalCost']] WHERE DESTINATION=#[message.payload['AirportDestinationCode']]"/>
    </jdbc-ee:connector>
    <data-mapper:config name="map_to_pojo" transformationGraphPath="map_to_pojo.grf" doc:name="map_to_pojo"/>
    <context:property-placeholder location="mule.dev.properties"/>
    <flow name="PriceQuoteFlow" doc:name="PriceQuoteFlow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8088" path="tickets" doc:name="HTTP"/>
        <logger message="INBOUND PAYLOAD: #[message.inboundProperties['http.method']] : #[message.payload.toString()]" level="INFO" doc:name="Log Payload"/>
            <choice doc:name="Choice">
                <when expression="#[message.inboundProperties['http.method'] == 'POST']">
                    <logger message="AFTER JSON-TO-POJO: #[message.payload]" level="INFO" doc:name="Logger"/>
                    <data-mapper:transform config-ref="json_to_pojo" doc:name="JSON To Pojo"/>
                <set-variable variableName="PriceRequest" value="#[message.payload]" doc:name="Save PriceRequest"/>
                    <all doc:name="All">
                        <flow-ref name="GetPriceOfferingUnited" doc:name="CallGetPriceOfferingUnited"/>
                        <flow-ref name="GetPriceOfferingDelta" doc:name="CallGetPriceOfferingDelta"/>
                        <flow-ref name="GetPriceOfferingSouthwest" doc:name="CallGetPriceOfferingSouthwest"/>
                    </all>
                <component class="PriceQuoteToPriceResponseTransformer" doc:name="Java"/>
                    <json:object-to-json-transformer ignoreBadInput="true" doc:name="Object to JSON"/>
                </when>
                <otherwise>
                    <parse-template location="index.html" doc:name="Return page"/>
                    <http:response-builder contentType="text/html" doc:name="HTTP Response Builder">
                        <http:cache-control noCache="true"/>
                    </http:response-builder>
                </otherwise>
            </choice>
    </flow>
    <flow name="GetPriceOfferingSouthwest" doc:name="GetPriceOfferingSouthwest">
        <logger message="ENTERING SOUTHWEST JDBC FLOW" level="INFO" doc:name="Logger"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="GET_PRICE_FOR_DEST_ORIGIN" queryTimeout="-1" connector-ref="SouthwestPriceDB" doc:name="GetPriceQuote"/>
        <choice doc:name="Choice">
            <when expression="#[message.payload.size() &gt; 0]">
                <data-mapper:transform config-ref="map_to_pojo" doc:name="Map To Pojo">
                    <data-mapper:input-arguments>
                        <data-mapper:input-argument key="airline">Southwest</data-mapper:input-argument>
                    </data-mapper:input-arguments>
                </data-mapper:transform>
            </when>
            <otherwise>
                <set-payload value="#[new com.mulesoft.training.pricing.PriceOffer('Southwest', 0)]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
            <logger message="EXITING SOUTHWEST JDBC FLOW" level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
        </catch-exception-strategy>
    </flow>
    <flow name="GetPriceOfferingUnited" doc:name="GetPriceOfferingUnited">
        <json:object-to-json-transformer doc:name="RequestToJson"/> 
        <jms:outbound-endpoint exchange-pattern="request-response" queue="UnitedQuoteServer" connector-ref="Active_MQ" doc:name="JMS"/>
        <json:json-to-object-transformer doc:name="JsonToOffer" ignoreBadInput="true" returnClass="com.mulesoft.training.pricing.PriceOffer"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="#[new com.mulesoft.training.pricing.PriceOffer('United', 0) ]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="RemoteUnitedServer" doc:name="RemoteUnitedServer">
        <jms:inbound-endpoint exchange-pattern="request-response" queue="UnitedQuoteServer" connector-ref="Active_MQ" doc:name="JMS"/>
        <logger message="ENTERING UNITED JMS FLOW" level="INFO" doc:name="Logger"/>
        <json:json-to-object-transformer returnClass="com.mulesoft.training.pricing.PriceRequest" doc:name="JsonToRequest"/>
        <component class="com.mulesoft.training.pricing.PriceOfferingUnited" doc:name="GetPriceOfferingUnited"/>
        <json:object-to-json-transformer doc:name="OfferToJson"/>
        <logger message="EXITING UNITED JMS FLOW" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="GetPriceOfferingDelta" doc:name="GetPriceOfferingDelta">
        <logger level="INFO" doc:name="Logger"/>
        <cxf:jaxws-client serviceClass="com.mulesoft.training.pricing.PricingOfferService" doc:name="SOAP" operation="getOffer"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="${soap.client.host}" port="${soap.client.port}" path="delta_price_service" method="POST" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="#[new com.mulesoft.training.pricing.PriceOffer('Delta', 0)] " doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
</mule>
